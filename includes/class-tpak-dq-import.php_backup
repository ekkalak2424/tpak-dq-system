<?php
/**
 * ไฟล์: includes/class-tpak-dq-import.php
 * จัดการระบบนำเข้าข้อมูลจาก LimeSurvey และ WP-Cron
 */

// ป้องกันการเข้าถึงโดยตรง
if (!defined('ABSPATH')) {
    exit;
}

class TPAK_DQ_Import {
    
    public function __construct() {
        // Admin Menu
        add_action('admin_menu', array($this, 'add_import_menu'));
        
        // Register settings
        add_action('admin_init', array($this, 'register_api_settings'));
        
        // AJAX handlers
        add_action('wp_ajax_tpak_import_data', array($this, 'ajax_import_data'));
        add_action('wp_ajax_tpak_test_api_connection', array($this, 'ajax_test_api_connection'));
        
        // WP-Cron
        add_action('tpak_import_cron', array($this, 'cron_import'));
        
        // Schedule cron if not exists
        if (!wp_next_scheduled('tpak_import_cron')) {
            wp_schedule_event(time(), 'hourly', 'tpak_import_cron');
        }
    }
    
    public function add_import_menu() {
        add_submenu_page(
            'edit.php?post_type=tpak_verification',
            'นำเข้าข้อมูล',
            'นำเข้าข้อมูล',
            'manage_options',
            'tpak-import',
            array($this, 'render_import_page')
        );
        
        // Add test page
        add_submenu_page(
            'edit.php?post_type=tpak_verification',
            'Test API',
            'Test API',
            'manage_options',
            'tpak-test-api',
            array($this, 'render_test_page')
        );
    }
    
    public function register_api_settings() {
        register_setting('tpak_api_settings', 'tpak_api_url');
        register_setting('tpak_api_settings', 'tpak_api_username');
        register_setting('tpak_api_settings', 'tpak_api_password');
    }
    
    public function render_import_page() {
        ?>
        <div class="wrap">
            <h1>นำเข้าข้อมูล TPAK</h1>
            
            <div class="tpak-import-section">
                <h2>นำเข้าข้อมูลจาก LimeSurvey API</h2>
                <form id="tpak-import-form" method="post">
                    <?php wp_nonce_field('tpak_import', 'tpak_import_nonce'); ?>
                    
                    <table class="form-table">
                        <tr>
                            <th scope="row">
                                <label for="import_type">ประเภทการนำเข้า</label>
                            </th>
                            <td>
                                <select name="import_type" id="import_type">
                                    <option value="manual">นำเข้าแบบ Manual</option>
                                    <option value="auto">ตั้งค่า Auto Import</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">
                                <label for="survey_id">Survey ID</label>
                            </th>
                            <td>
                                <input type="text" name="survey_id" id="survey_id" class="regular-text" />
                                <p class="description">ระบุ Survey ID จาก LimeSurvey</p>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">
                                <label for="date_range">ช่วงเวลา</label>
                            </th>
                            <td>
                                <input type="date" name="start_date" /> ถึง 
                                <input type="date" name="end_date" />
                            </td>
                        </tr>
                    </table>
                    
                    <p class="submit">
                        <button type="button" class="button button-primary" id="tpak-import-btn">
                            เริ่มนำเข้าข้อมูล
                        </button>
                    </p>
                </form>
                
                <div id="import-progress" style="display:none;">
                    <h3>กำลังนำเข้าข้อมูล...</h3>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: 0%;"></div>
                    </div>
                    <p class="status-message"></p>
                </div>
                
                <div id="import-results" style="display:none;">
                    <h3>ผลการนำเข้าข้อมูล</h3>
                    <div class="results-content"></div>
                </div>
            </div>
            
            <div class="tpak-import-section">
                <h2>การตั้งค่า LimeSurvey RemoteControl 2 API</h2>
                <form method="post" action="options.php">
                    <?php 
                    settings_fields('tpak_api_settings');
                    do_settings_sections('tpak_api_settings');
                    ?>
                    
                    <table class="form-table">
                        <tr>
                            <th scope="row">
                                <label for="tpak_api_url">API URL</label>
                            </th>
                            <td>
                                <input type="url" name="tpak_api_url" id="tpak_api_url" 
                                       value="<?php echo get_option('tpak_api_url'); ?>" 
                                       class="regular-text" />
                                <p class="description">เช่น https://survey.example.com/index.php/admin/remotecontrol</p>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">
                                <label for="tpak_api_username">Username</label>
                            </th>
                            <td>
                                <input type="text" name="tpak_api_username" id="tpak_api_username" 
                                       value="<?php echo get_option('tpak_api_username'); ?>" 
                                       class="regular-text" />
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">
                                <label for="tpak_api_password">Password</label>
                            </th>
                            <td>
                                <input type="password" name="tpak_api_password" id="tpak_api_password" 
                                       value="<?php echo get_option('tpak_api_password'); ?>" 
                                       class="regular-text" />
                            </td>
                        </tr>
                        <tr>
                            <th scope="row"></th>
                            <td>
                                <button type="button" class="button" id="test-api-connection">
                                    ทดสอบการเชื่อมต่อ
                                </button>
                                <span id="test-result" style="margin-left: 10px;"></span>
                            </td>
                        </tr>
                    </table>
                    
                    <?php submit_button('บันทึกการตั้งค่า'); ?>
                </form>
            </div>
            
            <script type="text/javascript">
            jQuery(document).ready(function($) {
                // Test API Connection
                $('#test-api-connection').on('click', function() {
                    var button = $(this);
                    var resultSpan = $('#test-result');
                    
                    // Disable button and show loading
                    button.prop('disabled', true).text('กำลังทดสอบ...');
                    resultSpan.html('<span style="color: #666;">กำลังเชื่อมต่อ...</span>');
                    
                    // Get values
                    var apiUrl = $('#tpak_api_url').val();
                    var username = $('#tpak_api_username').val();
                    var password = $('#tpak_api_password').val();
                    
                    // Validate
                    if (!apiUrl || !username || !password) {
                        resultSpan.html('<span style="color: red;">กรุณากรอกข้อมูลให้ครบ</span>');
                        button.prop('disabled', false).text('ทดสอบการเชื่อมต่อ');
                        return;
                    }
                    
                    // Send AJAX request
                    $.ajax({
                        url: ajaxurl,
                        type: 'POST',
                        data: {
                            action: 'tpak_test_api_connection',
                            nonce: '<?php echo wp_create_nonce('tpak_dq_nonce'); ?>',
                            api_url: apiUrl,
                            username: username,
                            password: password
                        },
                        success: function(response) {
                            if (response.success) {
                                resultSpan.html('<span style="color: green;">✓ ' + response.data + '</span>');
                            } else {
                                resultSpan.html('<span style="color: red;">✗ ' + response.data + '</span>');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('AJAX Error:', error);
                            resultSpan.html('<span style="color: red;">✗ เกิดข้อผิดพลาด: ' + error + '</span>');
                        },
                        complete: function() {
                            button.prop('disabled', false).text('ทดสอบการเชื่อมต่อ');
                        }
                    });
                });
                
                // Import functionality
                $('#tpak-import-btn').on('click', function() {
                    var button = $(this);
                    var formData = $('#tpak-import-form').serialize();
                    
                    // Validate form
                    if (!$('#survey_id').val()) {
                        alert('กรุณาระบุ Survey ID');
                        return;
                    }
                    
                    // Show progress
                    $('#import-progress').show();
                    $('#import-results').hide();
                    button.prop('disabled', true);
                    
                    // Update progress message
                    $('.status-message').text('กำลังเชื่อมต่อกับ LimeSurvey API...');
                    
                    // Start import
                    $.ajax({
                        url: ajaxurl,
                        type: 'POST',
                        data: formData + '&action=tpak_import_data',
                        dataType: 'json',
                        success: function(response) {
                            if (response.success) {
                                $('.results-content').html(
                                    '<div style="color: green; padding: 10px; background: #f0f8ff; border: 1px solid #d0e0f0; border-radius: 4px;">' +
                                    '<strong>สำเร็จ!</strong> ' + response.data.message +
                                    '</div>'
                                );
                                $('#import-results').show();
                                
                                // Update progress bar to 100%
                                $('.progress-fill').css('width', '100%');
                                $('.status-message').text('นำเข้าข้อมูลเสร็จสมบูรณ์');
                            } else {
                                $('.results-content').html(
                                    '<div style="color: red; padding: 10px; background: #fff0f0; border: 1px solid #ffd0d0; border-radius: 4px;">' +
                                    '<strong>เกิดข้อผิดพลาด!</strong> ' + response.data +
                                    '</div>'
                                );
                                $('#import-results').show();
                                $('.status-message').text('เกิดข้อผิดพลาด');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Import error:', error);
                            $('.results-content').html(
                                '<div style="color: red; padding: 10px; background: #fff0f0; border: 1px solid #ffd0d0; border-radius: 4px;">' +
                                '<strong>เกิดข้อผิดพลาด!</strong> ' + error +
                                '</div>'
                            );
                            $('#import-results').show();
                            $('.status-message').text('เกิดข้อผิดพลาดในการเชื่อมต่อ');
                        },
                        complete: function() {
                            button.prop('disabled', false);
                            
                            // Hide progress after 3 seconds
                            setTimeout(function() {
                                $('#import-progress').fadeOut();
                                $('.progress-fill').css('width', '0%');
                            }, 3000);
                        }
                    });
                });
            });
            </script>
        </div>
        <?php
    }
    
    public function render_test_page() {
        ?>
        <div class="wrap">
            <h1>Test LimeSurvey API</h1>
            
            <?php
            if (isset($_GET['test_survey'])) {
                $survey_id = sanitize_text_field($_GET['test_survey']);
                echo '<h2>Testing Survey ID: ' . esc_html($survey_id) . '</h2>';
                
                $api_url = get_option('tpak_api_url');
                $username = get_option('tpak_api_username');
                $password = get_option('tpak_api_password');
                
                if (!$api_url || !$username || !$password) {
                    echo '<p style="color: red;">กรุณาตั้งค่า API ก่อน</p>';
                    return;
                }
                
                $client = new LimeSurveyAPIClient($api_url, $username, $password);
                
                try {
                    $session_key = $client->get_session_key();
                    echo '<p style="color: green;">✓ เชื่อมต่อ API สำเร็จ</p>';
                    echo '<p>Session Key: ' . substr($session_key, 0, 20) . '...</p>';
                    
                    // Test export responses
                    echo '<h3>Export Responses:</h3>';
                    $responses = $client->export_responses($session_key, $survey_id, 'json', null, 'all');
                    
                    echo '<p>Response Type: ' . gettype($responses) . '</p>';
                    
                    if (is_array($responses)) {
                        echo '<p>จำนวน Response: ' . count($responses) . '</p>';
                        
                        if (!empty($responses)) {
                            echo '<h4>Response แรก:</h4>';
                            echo '<pre style="background: #f5f5f5; padding: 10px; max-height: 400px; overflow: auto;">';
                            print_r($responses[0]);
                            echo '</pre>';
                        }
                    } else {
                        echo '<p style="color: red;">ไม่ได้รับข้อมูลเป็น Array</p>';
                        echo '<pre style="background: #f5f5f5; padding: 10px;">';
                        var_dump($responses);
                        echo '</pre>';
                    }
                    
                    $client->release_session_key($session_key);
                    
                } catch (Exception $e) {
                    echo '<p style="color: red;">Error: ' . esc_html($e->getMessage()) . '</p>';
                }
            } else {
                ?>
                <form method="get">
                    <input type="hidden" name="post_type" value="tpak_verification">
                    <input type="hidden" name="page" value="tpak-test-api">
                    
                    <table class="form-table">
                        <tr>
                            <th><label for="test_survey">Survey ID ที่ต้องการทดสอบ:</label></th>
                            <td>
                                <input type="text" id="test_survey" name="test_survey" class="regular-text" required>
                                <p class="description">ใส่ Survey ID เพื่อทดสอบการดึงข้อมูล</p>
                            </td>
                        </tr>
                    </table>
                    
                    <?php submit_button('ทดสอบ'); ?>
                </form>
                <?php
            }
            ?>
        </div>
        <?php
    }
    
    public function ajax_import_data() {
        // Check nonce
        if (!check_ajax_referer('tpak_import', 'tpak_import_nonce', false)) {
            wp_send_json_error('Security check failed');
        }
        
        // Check permissions
        if (!current_user_can('manage_options')) {
            wp_send_json_error('Permission denied');
        }
        
        $survey_id = isset($_POST['survey_id']) ? sanitize_text_field($_POST['survey_id']) : '';
        $start_date = isset($_POST['start_date']) ? sanitize_text_field($_POST['start_date']) : '';
        $end_date = isset($_POST['end_date']) ? sanitize_text_field($_POST['end_date']) : '';
        
        if (empty($survey_id)) {
            wp_send_json_error('กรุณาระบุ Survey ID');
        }
        
        // Import data
        $result = $this->import_from_limesurvey($survey_id, $start_date, $end_date);
        
        if ($result['success']) {
            wp_send_json_success(array(
                'message' => isset($result['message']) ? $result['message'] : sprintf('นำเข้าข้อมูลสำเร็จ: %d รายการ', $result['imported'])
            ));
        } else {
            wp_send_json_error($result['message']);
        }
    }
    
    public function ajax_test_api_connection() {
        // Check nonce
        if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'tpak_dq_nonce')) {
            wp_send_json_error('Security check failed');
        }
        
        $api_url = isset($_POST['api_url']) ? esc_url_raw($_POST['api_url']) : '';
        $username = isset($_POST['username']) ? sanitize_text_field($_POST['username']) : '';
        $password = isset($_POST['password']) ? sanitize_text_field($_POST['password']) : '';
        
        if (!$api_url || !$username || !$password) {
            wp_send_json_error('กรุณากรอกข้อมูลให้ครบ');
        }
        
        // Test connection
        $client = new LimeSurveyAPIClient($api_url, $username, $password);
        
        try {
            $session_key = $client->get_session_key();
            if ($session_key && $session_key !== 'Invalid session key') {
                $client->release_session_key($session_key);
                wp_send_json_success('เชื่อมต่อสำเร็จ!');
            } else {
                wp_send_json_error('ไม่สามารถเชื่อมต่อได้ - ตรวจสอบ Username/Password');
            }
        } catch (Exception $e) {
            wp_send_json_error('Error: ' . $e->getMessage());
        }
    }
    
    public function cron_import() {
        // Get all active import settings
        $auto_imports = get_option('tpak_auto_imports', array());
        
        foreach ($auto_imports as $import_config) {
            $this->import_from_limesurvey(
                $import_config['survey_id'],
                date('Y-m-d', strtotime('-1 day')),
                date('Y-m-d')
            );
        }
    }
    
    private function import_from_limesurvey($survey_id, $start_date = '', $end_date = '') {
        // Get API settings
        $api_url = get_option('tpak_api_url');
        $username = get_option('tpak_api_username');
        $password = get_option('tpak_api_password');
        
        if (!$api_url || !$username || !$password) {
            return array(
                'success' => false,
                'message' => 'กรุณาตั้งค่า API ก่อนนำเข้าข้อมูล'
            );
        }
        
        // Initialize LimeSurvey API client
        $client = new LimeSurveyAPIClient($api_url, $username, $password);
        
        try {
            // Get session key
            $session_key = $client->get_session_key();
            
            if (!$session_key || $session_key === 'Invalid session key') {
                return array(
                    'success' => false,
                    'message' => 'ไม่สามารถเชื่อมต่อกับ LimeSurvey API - Session key ไม่ถูกต้อง'
                );
            }
            
            // Get survey responses
            $responses = $client->export_responses($session_key, $survey_id, 'json', null, 'all');
            
            // Debug
            error_log('TPAK Debug: Import survey ' . $survey_id);
            error_log('TPAK Debug: Response type = ' . gettype($responses));
            
            // Check if we got valid data
            if (!is_array($responses)) {
                error_log('TPAK Debug: Response is not array, value = ' . print_r($responses, true));
                return array(
                    'success' => false,
                    'message' => 'ไม่สามารถดึงข้อมูลจาก Survey ID: ' . $survey_id . ' (ข้อมูลไม่ถูกต้อง)'
                );
            }
            
            error_log('TPAK Debug: Response count = ' . count($responses));
            
            // Process responses
            $imported = 0;
            $errors = array();
            
            if (!empty($responses)) {
                // ตรวจสอบว่า response มี structure แบบไหน
                if (isset($responses['responses'])) {
                    $responses = $responses['responses'];
                }
                
                foreach ($responses as $response) {
                    try {
                        // Skip if not array
                        if (!is_array($response)) {
                            continue;
                        }
                        
                        // ตรวจสอบว่ามี ID หรือไม่
                        $response_id = null;
                        if (isset($response['id'])) {
                            $response_id = $response['id'];
                        } elseif (isset($response['tid'])) {
                            $response_id = $response['tid'];
                        } elseif (isset($response['token'])) {
                            $response_id = $response['token'];
                        } elseif (isset($response['submitdate'])) {
                            // ใช้ submitdate + survey_id เป็น unique identifier
                            $response_id = $survey_id . '_' . strtotime($response['submitdate']);
                        } else {
                            // ใช้ index + timestamp ถ้าไม่มี ID
                            static $index = 0;
                            $response_id = $survey_id . '_' . time() . '_' . $index++;
                        }
                        
                        // Check if already imported
                        $existing = get_posts(array(
                            'post_type' => 'tpak_verification',
                            'meta_query' => array(
                                array(
                                    'key' => '_tpak_response_id',
                                    'value' => $response_id,
                                    'compare' => '='
                                )
                            ),
                            'posts_per_page' => 1
                        ));
                        
                        if (empty($existing)) {
                            // Create new verification post
                            $post_title = sprintf('Survey %s - Response %s', $survey_id, $response_id);
                            if (isset($response['submitdate'])) {
                                $post_title .= ' - ' . date('d/m/Y H:i', strtotime($response['submitdate']));
                            }
                            
                            $post_id = wp_insert_post(array(
                                'post_title' => $post_title,
                                'post_type' => 'tpak_verification',
                                'post_status' => 'publish',
                                'post_author' => get_current_user_id()
                            ));
                            
                            if ($post_id && !is_wp_error($post_id)) {
                                // Save meta data
                                update_post_meta($post_id, '_tpak_survey_id', $survey_id);
                                update_post_meta($post_id, '_tpak_response_id', $response_id);
                                
                                // บันทึกข้อมูล response ทั้งหมด
                                // ตรวจสอบว่าข้อมูลเป็น array และไม่ว่าง
                                if (is_array($response) && !empty($response)) {
                                    // Log เพื่อ debug
                                    error_log('TPAK Debug: Saving response data for post ' . $post_id);
                                    error_log('TPAK Debug: Response has ' . count($response) . ' fields');
                                    
                                    // บันทึกข้อมูล - WordPress จะ serialize อัตโนมัติ
                                    $saved = update_post_meta($post_id, '_tpak_import_data', $response);
                                    
                                    if ($saved) {
                                        error_log('TPAK Debug: Data saved successfully');
                                    } else {
                                        error_log('TPAK Debug: Failed to save data');
                                    }
                                }
                                
                                update_post_meta($post_id, '_tpak_workflow_status', '');
                                update_post_meta($post_id, '_tpak_import_date', current_time('mysql'));
                                
                                $imported++;
                            }
                        }
                    } catch (Exception $e) {
                        $errors[] = $e->getMessage();
                        error_log('TPAK Import Error (single response): ' . $e->getMessage());
                    }
                }
            } else {
                // ถ้าไม่มีข้อมูล
                return array(
                    'success' => true,
                    'imported' => 0,
                    'message' => 'ไม่พบข้อมูลในแบบสอบถามนี้ (Survey ID: ' . $survey_id . ')'
                );
            }
            
            // Release session
            $client->release_session_key($session_key);
            
            if (!empty($errors)) {
                error_log('TPAK Import Errors: ' . implode(', ', $errors));
            }
            
            return array(
                'success' => true,
                'imported' => $imported
            );
            
        } catch (Exception $e) {
            error_log('TPAK Import Error: ' . $e->getMessage());
            return array(
                'success' => false,
                'message' => 'Error: ' . $e->getMessage()
            );
        }
    }
}

/**
 * Simple LimeSurvey API Client
 */
class LimeSurveyAPIClient {
    private $api_url;
    private $username;
    private $password;
    
    public function __construct($api_url, $username, $password) {
        $this->api_url = $api_url;
        $this->username = $username;
        $this->password = $password;
    }
    
    public function get_session_key() {
        $params = array(
            'method' => 'get_session_key',
            'params' => array($this->username, $this->password),
            'id' => 1
        );
        
        $response = $this->send_request($params);
        
        if (isset($response['result'])) {
            // Check if session key is valid
            if (is_string($response['result']) && strpos($response['result'], 'Invalid') === false) {
                return $response['result'];
            }
        }
        
        return false;
    }
    
    public function export_responses($session_key, $survey_id, $format = 'json', $language = null, $completion = 'all') {
        $params = array(
            'method' => 'export_responses',
            'params' => array(
                $session_key,
                intval($survey_id), // Make sure survey ID is integer
                $format,
                $language,
                $completion,
                null, // from
                null, // to
                null  // fields
            ),
            'id' => 1
        );
        
        $response = $this->send_request($params);
        
        if (isset($response['result'])) {
            $result = $response['result'];
            
            // Check for errors
            if (is_array($result) && isset($result['status'])) {
                error_log('TPAK API Error: ' . print_r($result, true));
                return array();
            }
            
            // If it's already an array, return it
            if (is_array($result)) {
                return $result;
            }
            
            // If it's a string, try to decode it
            if (is_string($result)) {
                // Try base64 decode first
                $decoded = base64_decode($result, true);
                if ($decoded !== false) {
                    $data = json_decode($decoded, true);
                    if ($data !== null) {
                        return $data;
                    }
                }
                
                // Try direct JSON decode
                $json_decoded = json_decode($result, true);
                if ($json_decoded !== null) {
                    return $json_decoded;
                }
            }
        }
        
        return array();
    }
    
    public function release_session_key($session_key) {
        $params = array(
            'method' => 'release_session_key',
            'params' => array($session_key),
            'id' => 1
        );
        
        $this->send_request($params);
    }

    public function get_survey_properties($session_key, $survey_id, $properties = null) {
        $params = array(
            'method' => 'get_survey_properties',
            'params' => array($session_key, intval($survey_id), $properties),
            'id' => 1
        );
        $response = $this->send_request($params);
        return isset($response['result']) ? $response['result'] : null;
    }
    public function list_groups($session_key, $survey_id) {
        $params = array(
            'method' => 'list_groups',
            'params' => array($session_key, intval($survey_id)),
            'id' => 1
        );
        $response = $this->send_request($params);
        return isset($response['result']) ? $response['result'] : array();
    }
    public function list_questions($session_key, $survey_id, $group_id = null, $language = null) {
        $params = array(
            'method' => 'list_questions',
            'params' => array($session_key, intval($survey_id), $group_id, $language),
            'id' => 1
        );
        $response = $this->send_request($params);
        return isset($response['result']) ? $response['result'] : array();
    }
    public function get_question_properties($session_key, $question_id, $properties = null, $language = null) {
        $params = array(
            'method' => 'get_question_properties',
            'params' => array($session_key, intval($question_id), $properties, $language),
            'id' => 1
        );
        $response = $this->send_request($params);
        return isset($response['result']) ? $response['result'] : null;
    }
    public function get_language_properties($session_key, $survey_id, $language = null) {
        $params = array(
            'method' => 'get_language_properties',
            'params' => array($session_key, intval($survey_id), null, $language),
            'id' => 1
        );
        $response = $this->send_request($params);
        return isset($response['result']) ? $response['result'] : null;
    }
    
    public function send_request($params) {
        $ch = curl_init();
        
        curl_setopt($ch, CURLOPT_URL, $this->api_url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($params));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
            'Content-Type: application/json',
            'Content-Length: ' . strlen(json_encode($params))
        ));
        
        $response = curl_exec($ch);
        
        if ($response === false) {
            throw new Exception('CURL Error: ' . curl_error($ch));
        }
        
        curl_close($ch);
        
        $result = json_decode($response, true);
        
        if (!$result) {
            throw new Exception('Invalid JSON response from API');
        }
        
        // Check for API error
        if (isset($result['error'])) {
            throw new Exception('API Error: ' . print_r($result['error'], true));
        }
        
        return $result;
    }
}